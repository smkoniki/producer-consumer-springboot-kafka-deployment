
server.port=8086
#Connection
spring.kafka.jaas.enabled=true
spring.kafka.jaas.login-module=org.apache.kafka.common.security.plain.PlainLoginModule
spring.kafka.jaas.options.username=token
spring.kafka.jaas.options.password=${EVENT_STREAMS_CRED_ENV_VAR}
spring.kafka.bootstrap-servers=broker-1-crgfnvrblwxzj9gp.kafka.svc03.us-south.eventstreams.cloud.ibm.com:9093,broker-5-crgfnvrblwxzj9gp.kafka.svc03.us-south.eventstreams.cloud.ibm.com:9093,broker-0-crgfnvrblwxzj9gp.kafka.svc03.us-south.eventstreams.cloud.ibm.com:9093,broker-2-crgfnvrblwxzj9gp.kafka.svc03.us-south.eventstreams.cloud.ibm.com:9093,broker-4-crgfnvrblwxzj9gp.kafka.svc03.us-south.eventstreams.cloud.ibm.com:9093,broker-3-crgfnvrblwxzj9gp.kafka.svc03.us-south.eventstreams.cloud.ibm.com:9093
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=PLAIN


#Consumer
listener.topic=atc.tenant12.clinical.out
spring.kafka.consumer.group-id=atc-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
